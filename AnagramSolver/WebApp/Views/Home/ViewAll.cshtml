
@using AnagramSolver.Contracts.Models
@model WebApp.PaginatedList<Word>

@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var resultList = ViewData["ResultList"] as List<Word>;
}

<!DOCTYPE html>

<html>
<head>
    <title></title>
</head>
<body>
<div class="content">
    
    <div class="anagram-results">
        <h4>Choose a word from the list to see its anagram(s):</h4>
        <table id="words-table" class="table table-hover table-responsive" >
            <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Word</th>
                <th scope="col">Type</th>
                <th scope="col">Word Anagram</th>
                
            </tr>
            </thead>
            <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>@((Model.PageIndex-1)*100+i+1)</td>
                    <td>@Model[i].Content</td>
                    <td>@Model[i].Type</td>
                    <td>@Html.ActionLink("View Anagram", "Index", "Home", new {word = Model[i].Content}, new{@class="btn btn-link", @target="_blank"})</td>
    
                </tr>
            }
            </tbody>
        </table>
        <div class="pagination" >
            @if (Model.HasPreviousPage) { 
                @Html.ActionLink("Previous", "ViewAll", "Home", new { pageNumber = Model.PageIndex - 1 }, new {@class = "btn btn-secondary"})
            }
            @if (Model.HasNextPage) { 
                @Html.ActionLink("Next", "ViewAll", "Home", new { pageNumber = Model.PageIndex + 1 }, new {@class = "btn btn-secondary"})
            }
        </div>
    </div>
</div>

</body>
</html>
